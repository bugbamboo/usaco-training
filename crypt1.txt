import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.util.*;

public class crypt1 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader("crypt1.in"));
        PrintWriter out = new PrintWriter(new FileWriter("crypt1.out"));
        int x=Integer.parseInt(br.readLine());
        int[] digits = new int[x];
        StringTokenizer st = new StringTokenizer(br.readLine());
        for(int i=0; i<x; i++){
            digits[i]=Integer.parseInt(st.nextToken());
        }
        int a=0;
        int b=0;
        int c=0;
        int[] digit2 = new int[81];
        int[] digit3 = new int[729];
        int [] digit4= new int[6561];
        for(int j:digits){
            for(int h:digits){
                digit2[a]= (j*10)+h;
                a++;
            }

        }
        for(int i:digits){
            for(int j:digits){
                for(int h:digits){
                    digit3[b]= (i*100)+(j*10)+h;
                    b++;
                }

            }
        }
        for(int i:digits){
            for(int j:digits){
                for(int h:digits){
                    for(int g:digits){
                    digit4[c]= (i*1000)+(j*100)+(h*10)+g;
                    c++;
                }
                }

            }
        }
        Arrays.sort(digit2);

        Arrays.sort(digit3);
        Arrays.sort(digit4);

       Integer[] g=  Arrays.stream(removeDuplicates(digit2))
               .map(Object::toString)
               .map(Integer::valueOf)
               .toArray(Integer[]::new);
        Integer[] u=  Arrays.stream(removeDuplicates(digit3))
                .map(Object::toString)
                .map(Integer::valueOf)
                .toArray(Integer[]::new);
        Integer[] y=  Arrays.stream(removeDuplicates(digit3))
                .map(Object::toString)
                .map(Integer::valueOf)
                .toArray(Integer[]::new);
        System.out.println(g+" "+digit2.length+" "+y);
        int amount=0;
        for(int i:u){
            for (int j:g){
                if(isValid(i*(j%10),digit3)&&isValid(i*((j/10)%10),digit3)&&isValid(i*j,digit4)){
                        amount++;
                    }}


        }
        System.out.println(amount);

    }
    public static boolean isValid(int i, int [] dictionary){
        int y = Arrays.binarySearch(dictionary,i);
        if(y==-1){
            return false;}
        else{
            return true;
        }
    }
    private static Object[] removeDuplicates(int[] nums) {
        HashSet<Integer> set=new HashSet(Collections.singleton(nums));
        Object[] arr = set.toArray();
        return arr;

    }}
