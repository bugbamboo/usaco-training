/*
ID: achyuta2
LANG: JAVA
TASK: lamps
*/

import java.io.*;
import java.util.*;


public class lamps {
    public static void main(String[] args) throws IOException {

        BufferedReader f=new BufferedReader(new FileReader("lamps.in"));
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("lamps.out")));

        int lampnum = Integer.parseInt(f.readLine());
        int movecount = Integer.parseInt(f.readLine());
        StringTokenizer st = new StringTokenizer(f.readLine());
        ArrayList<Integer> onLights = new ArrayList<>();
        while (true){
            int toadd = Integer.parseInt(st.nextToken());
            if(toadd==-1){
                break;
            }
            onLights.add(toadd);
        }
        st = new StringTokenizer(f.readLine());
        ArrayList<Integer> offLights = new ArrayList<>();
        while (true){
            int toadd = Integer.parseInt(st.nextToken());
            if(toadd==-1){
                break;
            }
            else{
                offLights.add(toadd);
            }
        }
        int[][] possibilities = {{0,0,0,0},{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1},{1,1,0,0},{1,0,1,0},{1,0,0,1},{0,1,1,0},{0,1,0,1},{0,0,1,1},{0,1,1,1},{1,0,1,1},{1,1,0,1},{1,1,1,0},{1,1,1,1}};
        ArrayList<int[]> reals = validate(possibilities,movecount);
        ArrayList<String> values = new ArrayList<>();
        String start= "";
        for(int i=0; i<lampnum; i++){
            start=start+"1";
        }
        for(int[] possible :reals){
            char[] temp = start.toCharArray();
            if(possible[0]==1){
                for(int i=0; i<temp.length; i++){
                    if(temp[i]=='0'){
                        temp[i]='1';
                    }else{
                        temp[i]='0';
                    }
                }
            }
            if(possible[1]==1){
                for(int i=1; i<temp.length; i+=2){
                    if(temp[i]=='0'){
                        temp[i]='1';
                    }else{
                        temp[i]='0';
                    }
                }

            }
            if(possible[2]==1){
                for(int i=0; i<temp.length; i+=2){
                    if(temp[i]=='0'){
                        temp[i]='1';
                    }else{
                        temp[i]='0';
                    }
                }
            }
            if(possible[3]==1){
                for(int i=0; i<temp.length; i+=3){
                    if(temp[i]=='0'){
                        temp[i]='1';
                    }else{
                        temp[i]='0';
                    }
                }
            }
            if(check(temp,onLights,offLights)){
                values.add(String.valueOf(temp));
            }

        }
	if(values.size()==0){
	out.println("IMPOSSIBLE");
	out.close();
	return;
	}
        Collections.sort(values);
        for(String s:values){
            out.println(s);
        }
        out.close();


    }
    static boolean check(char[] text, ArrayList<Integer> on, ArrayList<Integer> off){
        for(int i: on){
            if(text[i-1]=='0'){
                return false;
            }
        }
        for(int i: off){
            if(text[i-1]=='1'){
                return false;
            }
        }
        return true;
    }
    static ArrayList<int[]> validate(int[][] possible, int count){
        ArrayList<int[]> ans = new ArrayList<>();
        for(int[] h:possible){
            int countMove = 0;
            for(int i=0; i<4; i++){
                countMove+=h[i];
            }
            if(countMove>count){
                continue;
            }
            if((count-countMove)%2==0){
                ans.add(h);

            }else if(countMove!=0&&count%countMove==0 && (count/countMove)%2==1){
                ans.add(h);
            }
        }
        return ans;
    }
}